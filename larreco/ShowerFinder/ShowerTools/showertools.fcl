#include "trackfinderalgorithms.fcl"
#include "showeralgorithms.fcl"
#include "clusteralgorithms.fcl"
#include "calorimetry.fcl"

#There are more tools on DomBarker_ShowerBranch

BEGIN_PROLOG

showerbasetools:{
    TRACSAlg:         @local::standard_tracsalg
    EnableEventDisplay: false
    }

showerpcadirection:{
    tool_type: ShowerPCADirection
    BaseTools: @local::showerbasetools
    PFParticleModuleLabel: "pandora"
    NSegments: 6           #If using the RMS gradient to decide what direction to go in
                           #this is the number of segements to split the shower into.
    UseStartPosition: true #The direction of the PCA is in the direction of
                           #(Shower Center - Start Position)
    ChargeWeighted:   true #Apply a charge weighting in the PCA.
    ShowerStartPositionInputLabel: "ShowerStartPosition"
    ShowerDirectionOutputLabel: "ShowerDirection"
    ShowerCentreOutputLabel: "ShowerCentre"
    ShowerPCAOutputLabel: "ShowerPCA"
    }

#showerlinearenergy:{
#    tool_type:  ShowerLinearEnergy
#    BaseTools: @local::showerbasetools
#    PFParticleModuleLabel: "pandora"
#    UGradient:   0.00155644  #Gradient of the linear graph of the total charge to total
                             #energy, in the U plane. in MeV/ADC.
#    UIntercept:  5.92931     #Intercept of the linear graph of the total charge to total
                             #energy in the plane. MeV
#    VGradient:   0.00173915
#    VIntercept:  -2.13307
#    ZGradient:   0.00153631
#    ZIntercept:  5.19711
#    XGradient:   0
#    XIntercept:  0
#    YGradient:   0
#    YIntercept:  0
#    ThreeDGradient:  0
#    ThreeDIntercept: 0
#    ShowerEnergyOutputLabel: "ShowerEnergy"
#    ShowerBestPlaneOutputLabel: "ShowerOverallBestPlane"
#    }

showerlinearenergy:{
    tool_type:  ShowerLinearEnergy
    BaseTools: @local::showerbasetools
    PFParticleModuleLabel: "pandora"
    # Overwrite the Gradients and Intercepts in you experiemnt repository
    Gradients:   [0.00155644, 0.00173915, 0.00153631] #Gradient of the linear graph of the total charge to total
    #energy, in the Plane0 plane. in MeV/ADC.
    Intercepts:  [5.92931, -2.13307, 5.19711]     #Intercept of the linear graph of the total charge to total
    ShowerEnergyOutputLabel: "ShowerLinearEnergy"
    ShowerBestPlaneOutputLabel: "ShowerOverallBestPlane"
    }


showerrecoenergyfromnumelectrons:{
    tool_type:  ShowerRecoEnergyfromNumElectrons
    BaseTools: @local::showerbasetools
    CalorimetryAlg: @local::sbnd_calorimetryalgmc #calorimetry fcls get overwritten in sbnd # @local::standard_calorimetryalgmc
    PFParticleModuleLabel: "pandora"
    ShowerEnergyfromNumElectrons: "ShowerEnergyfromNumElectrons" 
    SCECorrectEField:     true
    NominalRecombinationFactor: 0.64    # Study done by Ed
    NominalModBoxdEdx:  3.66740184715815  # Found by plugging nominal_recombination into modbox eq (see eg https://arxiv.org/pdf/1710.00396.pdf) and calculating with   
                                          # Wolfran Alpha... We end up with a grim looking function of the form dEdx = k*exp(dEdx) 
                                          # and I don't know / haven't looked up how to solve this properly yet (Google "ProductLog" or "Lambert-W" function for info)  
    }

showerdecisionbestplane:{
    tool_type: ShowerDecisionBestPlane
    BaseTools: @local::showerbasetools
    CalorimetryAlg: @local::sbnd_calorimetryalgmc #calorimetry fcls get overwritten in sbnd # @local::standard_calorimetryalgmc
    PFParticleModuleLabel: "pandora"
    InitialTrackBestPlaneInputLabel: "InitialTrackBestPlaneInputLabel"
    OverallBestPlaneInputLabel: "ShowerOverallBestPlane"
    BestPlaneOutputLabel: "BestPlaneOutputLabel"
}

shower2Dlinearregressiontrackhitfinder:{
    tool_type:             Shower2DLinearRegressionTrackHitFinder
    BaseTools:             @local::showerbasetools
    Nfitpass:              4                     #Number of time to fit the straight line
    #to the hits
    Nfithits:              [83, 50, 33, 33]      #Max Number of hits to fit to
    Toler:                 [50., 8.3, 3.3, 3.3 ] #Tolerance or each interaction. Defined
                                                 #as the perpendicualar distance from
                                                 #the best fit line.
    ApplyChargeWeight:     true                  #Apply charge weighting to the fit.
    PFParticleModuleLabel: "pandora"
    HitsModuleLabel:       "linecluster"
    ShowerStartPositionInputLabel: "ShowerStartPosition"
    ShowerDirectionInputLabel: "ShowerDirection"
    InitialTrackHitsOutputLabel: "InitialTrackHits"
    InitialTrackSpacePointsOutputLabel: "InitialTrackSpacePoints"

    }

showerpmatrackfinder:{
    tool_type: ShowerPMATrackFinder
    BaseTools:             @local::showerbasetools
    MinTrajectoryPoints: 2 #Max number of trajectory points
                           #required to say the fit as good
    ProjectionMatchingAlg: @local::standard_projectionmatchingalg
    InitialTrackLengthOutputLabel: "InitialTrackLength"
    InitialTrackOutputLabel: "InitialTrack"
    ShowerStartPositionInputLabel: "ShowerStartPosition"
    ShowerDirectionInputLabel: "ShowerDirection"
    InitialTrackHitsInputLabel: "InitialTrackHits"

    }

showerpandoraslidingfittrackfinder:{
    tool_type: ShowerPandoraSlidingFitTrackFinder
    BaseTools: @local::showerbasetools
    SlidingFitHalfWindow: 12 #Fill definition
    MinTrajectoryPoints: 2   #Max number of trajectory points
    #required to say the fit as good
    InitialTrackLengthOutputLabel: "InitialTrackLength"
    InitialTrackOutputLabel: "InitialTrack"
    ShowerStartPositionInputLabel: "ShowerStartPosition"
    ShowerDirectionInputLabel: "ShowerDirection"
    InitialTrackSpacePointsInputLabel: "InitialTrackSpacePoints"
    InitialTrackHitsInputLabel: "InitialTrackHits"
    }


shower3Dtrackhitfinder:{
    tool_type: Shower3DTrackHitFinder
    BaseTools: @local::showerbasetools

    PFParticleModuleLabel: "pandora"
    MaxProjectionDist:     10     #Max distance a hit can be in the direction of
    #the shower in cm
    MaxPerpendicularDist:  1      #Max distance a hit can be in the perpendicular
    #direction of the shower in cm
    ForwardHitsOnly:       true   #Don't use hits behind the vertex.
    DebugEVD:              false
    AllowDyanmicLength:    false  #If the Track legth is saved use that instead of
                                  #MaxProjectionDist
    InitialTrackLengthInputLabel: "InitialTrackLength"
    ShowerStartPositionInputLabel: "ShowerStartPosition"
    ShowerDirectionInputLabel: "ShowerDirection"
    InitialTrackHitsOuputLabel: "InitialTrackHits"
    InitialTrackSpacePointsOutputLabel: "InitialTrackSpacePoints"
    }

showerpfpvertexstartposition:{
    tool_type: ShowerPFPVertexStartPosition
    BaseTools: @local::showerbasetools
    PFParticleModuleLabel: "pandora"
    ShowerStartPositionOutputLabel: "ShowerStartPosition"
    ShowerDirectionInputLabel: "ShowerDirection"
    }

showerstandardcalodedx:{
    tool_type: ShowerStandardCalodEdx
    BaseTools: @local::showerbasetools

    CalorimetryAlg:  @local::standard_calorimetryalgmc
    MaxHitPlane:     true #Set the best planes as the one with the most hits
    MissFirstPoint:  true #Do not use any hits from the first wire
    dEdxTrackLength: 3    #Max length from a hit can be to the start point in cm.
    ScaleWithEnergy:      false #Vary the parameters as function of E
    EnergyLengthConst:    0.1   #Linear dimensionless value to vary the energy
    ShowerEnergyInputLabel: "ShowerEnergy"
    ShowerStartPositionInputLabel: "ShowerStartPosition"
    InitialTrackHitsInputLabel: "InitialTrackHits"
    ShowerDirectionInputLabel: "ShowerDirection"
    ShowerdEdxOutputLabel: "ShowerdEdx"
    ShowerBestPlaneOutputLabel: "ShowerBestPlane"

    }

showerlmastandardcalodedx:{
    tool_type: ShowerLMAStandardCalodEdx
    BaseTools: @local::showerbasetools

    CalorimetryAlg:      @local::standard_calorimetryalgmc
    MaxHitPlane:         true #Set the best planes as the one with the most hits
    MissFirstPoint:      true #Do not use any hits from the first wire
    dEdxTrackLength:     3    #Max length from a hit can be to the start point in cm.
    MovingAveragePoints: 3
    }

showertrackhitdirection:{
    tool_type: ShowerTrackHitDirection
    BaseTools: @local::showerbasetools
    UsePandoraVertex:      true #Direction from point defined as
    #(Position of Hit - Vertex) rather than
    #(Position of Hit - Track Start Point).
    HitModuleLabel:        "linecluster"
    PFParticleModuleLabel: "pandora"
    InitialTrackHitsInputLabel: "InitialTrackHits"
    ShowerStartPositionInputLabel: "ShowerStartPosition"
    InitialTrackInputLabel: "InitialTrack"
    ShowerDirectionOutputLabel: "ShowerDirection"
    }

showertrackspacepointdirection:{
    tool_type: ShowerTrackSpacePointDirection
    BaseTools: @local::showerbasetools
    UsePandoraVertex: true #Direction from point defined as
    #(Position of SP - Vertex) rather than
    #(Position of SP - Track Start Point).
    InitialTrackSpacePointsInputLabel: "InitialTrackSpacePoints"
    ShowerStartPositionInputLabel: "ShowerStartPosition"
    InitialTrackInputLabel: "InitialTrack"
    ShowerDirectionOutputLabel: "ShowerDirection"
    }

showertrackdirection:{
    tool_type: ShowerTrackDirection
    BaseTools: @local::showerbasetools
    UsePandoraVertex: true #Direction from point defined as
    #(Position of traj point - Vertex) rather than
    #(Position of traj point - Track Start Point).
    UsePositionInfo:  true #Don't use the directionAt point rather than definition above.
    #i.e. ((Position of traj point + 1) - (Position of traj point)
    DebugEVD:         false
    }

showertracktrajectorypointdirection: {
    tool_type: ShowerTrackTrajectoryPointDirection
    BaseTools:             @local::showerbasetools
    TrajPoint:         1   #Trajectory point to get the direction from.
    UsePandoraVertex: true #Direction from point defined as
                           #(Position of traj point - Vertex) rather than
                           #(Position of traj point - Track Start Point).
    UsePositonInfo:   true #Don't use the directionAt point rather than definition above.
    #i.e. ((Position of traj point + 1) - (Position of traj point)
    InitialTrackInputLabel: "InitialTrack"
    ShowerStartPositionInputLabel: "ShowerStartPosition"
    ShowerDirectionOutputLabel: "ShowerDirection"

    }

showersmarttracktrajectorypointdirection: {
    tool_type: ShowerSmartTrackTrajectoryPointDirection
    BaseTools:             @local::showerbasetools
    UsePandoraVertex:    false  #Direction from point defined as
                                #(Position of traj point - Vertex) rather than
                                #(Position of traj point - Track Start Point).
    AllowDynamicSliding: true   #Rather than evualte the angle from the start use
                                #the previous trajectory point position.
    UsePositionInfo:     false  #Don't use the DirectionAtPoint rather than
                                #definition above.
                                #((Position of traj point + 1) - (Position of traj point)
    UseStartPos:         false  #Rather the using the angles between the directions
                                #from start position to the trajectory points
                                #use the angle between the the points themselves
    AngleCut:           0.01745 #Angle between the directions has to be less than
    #this value in radians
    InitialTrackInputLabel: "InitialTrack"
    ShowerStartPositionInputLabel: "ShowerStartPosition"
    ShowerDirectionOuputLabel: "ShowerDirection"
    }

showertrackpcadirection:{
    tool_type: ShowerTrackPCADirection
    DebugEVD:               false
    ChargeWeighted:         true      #Should the PCA be charge weighted.
    MinPCAPoints:           10        #Number of spacepoints needed to the anlaysis.
    PFParticleModuleLabel: "pandora"
    HitModuleLabel:        "linecluster"
    BaseTools:        @local::showerbasetools
    CalorimetryAlg:   @local::standard_calorimetryalgmc
    ShowerStartPositionInputLabel: "ShowerStartPosition"
    InitialTrackSpacePointsInputLabel: "InitialTrackSpacePoints"
    ShowerDirectionOutputLabel: "ShowerDirection"
    }


showerstartpositioncheater:{
    tool_type:               ShowerStartPositionCheater
    BaseTools:           @local::showerbasetools
    TRACSCheatingAlg:    @local::standard_tracscheatingalg
    PFParticleModuleLabel:  "pandora"
    HitModuleLabel:         "linecluster"
    ShowerStartPositionOutputLabel: "ShowerStartPosition"
    TrueParticleOutputLabel: "TrueParticle"
    }

showerdirectioncheater:{
    tool_type:              ShowerDirectionCheater
    BaseTools:          @local::showerbasetools
    TRACSCheatingAlg:   @local::standard_tracscheatingalg
    PFParticleModuleLabel:  "pandora"
    NSegments:              6     #Number of segements the shower should be split into
    #for the RMS analysis
    RMSFlip:                false #Decide to flip the direction on the RMS info
    VertexFlip:             false #Decide to flip the direction based on the vertex
                                  #position relative shower center.
    ShowerStartPositionInputLabel: "ShowerStartPosition"
    TrueParticleInputLabel:        "TrueParticle"
    ShowerDirectionOuputLabel:     "ShowerDirection"
    }

showerenergycheater:{
    tool_type:               ShowerEnergyCheater
    BaseTools:           @local::showerbasetools
    TRACSCheatingAlg:    @local::standard_tracscheatingalg
    PFParticleModuleLabel:  "pandora"
    HitModuleLabel:         "linecluster"
}


showertrackfindercheater:{
    tool_type:               ShowerTrackFinderCheater
    BaseTools:           @local::showerbasetools
    TRACSCheatingAlg:    @local::standard_tracscheatingalg
    PFParticleModuleLabel:  "pandora"
    HitModuleLabel:         "linecluster"
    MaxProjectionDist:      10
    MaxPerpendicularDist:   1
    DebugEVD:               false
    TrueParticleIntputLabel:     "TrueParticle"
    ShowerStartPositionInputTag: "ShowerStartPosition"
    ShowerDirectionInputTag:     "ShowerDirection"
    InitialTrackHitsOutputLabel: "InitialTrackHits"
    InitialTrackSpacePointsOutputLabel: "InitialTrackSpacePoints"
    }

showertracktrajtospacepoint:{
    tool_type: ShowerTrackTrajToSpacepoint
    BaseTools: @local::showerbasetools
    PFParticleModuleLabel: "pandora"
    MaxDist:               1  #Max Distance a trajectory point can be away
    #from a spacepoint in cm.
    InitialTrackSpacePointsOuputLabel: "InitialTrackSpacePoints"
    InitialTrackHitsOuputLabel: "InitialTrackHits"
    InitialTrackInputTag: "InitialTrack"
    ShowerStartPositionInputTag: "ShowerStartPosition"
    InitialTrackSpacePointsInputTag: "InitialTrackSpacePoints"
    }

showerslidingstandardcalodedx:{
    tool_type: ShowerSlidingStandardCalodEdx
    BaseTools: @local::showerbasetools
    CalorimetryAlg: @local::standard_calorimetryalgmc
    MinDistCutOff:         2    #Distance in wires a hit has to be from the start
                                #position of the track to be used
    MaxDist:               2    #Distance in wires a that a trajectory point can
                                #be from a spacepoint to match to it.
    MinAngleToWire:        0    #Minimum angle between the wire direction and the shower
                                #direction for the spacepoint to be used. in radians
                                #Default means the cut has no effect.
    ShapingTime:           999  #Defualt means the cut has no effect. in microseconds.
    dEdxTrackLength:       999  #Max Distance a spacepoint can be away
                                #from the start of the track. in seconds
    CutStartPosition:     false #Remove hits using MinDistCutOff from the vertex as well
    UseMedian:            true  #Use the median dEdx rather the mean.
    T0Correct:            false
    SCECorrectPitch:      false
    SCECorrectEField:     false
    PFParticleModuleLabel: "pandora"
    ShowerStartPositionInputLabel: "ShowerStartPosition"
    ShowerDirectionInputLabel: "ShowerDirection"
    InitialTrackSpacePointsInputLabel: "InitialTrackSpacePoints"
    InitialTrackInputLabel: "InitialTrack"
    ShowerdEdxOuputLabel: "ShowerdEdx"
    ShowerBestPlaneOutputLabel: "ShowerBestPlane"
    ShowerdEdxVecOuputLabel: "ShowerdEdxVec"

  }

showerresidualtrackhitfinder:{
tool_type: ShowerResidualTrackHitFinder
             BaseTools: @local::showerbasetools
             PFParticleModuleLabel: "pandora"
             UseShowerDirection:    false    #Use the shower direction previously defined to order the hits, otherwise go from distance from start
             ForwardHitsOnly:       true     #Only use hits in front of the showerstart
             MaxResidualDiff:       0.3      #Cut on the difference between the previous fit residual and current fit residual
             MaxAverageResidual:    0.5      #Cut on the average residual of the fit
             TrackMaxAdjacentSPDistance: 2.5 #Cut after the the fitting remove points that are TrackMaxAdjacentSPDistance away from the previous point.
             StartFitSize:          12       #Starting number of hits to fit to
             NMissPoints:           2        #If the residual cut fails the number of hits that can be skipped
             ChargeWeighted:        false    #Charge weighted
             MakeTrackSeed:         true     #Recurively remove the hits from the start sed until its below the residual
             ShowerStartPositionInputLabel: "ShowerStartPosition"
             InitialTrackHitsOutputLabel: "InitialTrackHits"
             InitialTrackSpacePointsOutputLabel: "InitialTrackSpacePoints"
             ShowerDirectionInputLabel: "ShowerDirection"
}

showergenerictool:{
tool_type: ShowerGenericTool
             BaseTools: @local::showerbasetools
             PFParticleModuleLabel: "pandora"
             ShowerEnergyfromNumElectrons: "ShowerEnergyfromNumElectrons" 
             ShowerLinearEnergy: "ShowerLinearEnergy" 
             BestPlane: "ShowerOverallBestPlane"  
}


END_PROLOG
